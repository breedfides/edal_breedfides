
//apply plugin: 'com.github.johnrengelman.shadow'
//apply plugin: "com.github.hierynomus.license"
//apply plugin: 'net.researchgate.release'
/*
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://maven.eveoh.nl/content/repositories/releases" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        classpath "net.researchgate:gradle-release:2.6.0"
    }
}
*/



/*
sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
*/

//configurations.all { }



license {
    header rootProject.file('eDAL-MetaDataAPI-Server/src/main/resources/license.txt')
    strictCheck false
 	ext.year = Calendar.getInstance().get(Calendar.YEAR)
	include "**/*.java"
}
/*
repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
}
*/
/*
sourceSets {
        main {
            java {
                srcDirs= ["src/main/java"]
            }
            resources {
                srcDirs= ["src/main/resources","src/main/unfilteredresources"]
            }
        }
}
*/

/*
dependencies {
    compile group: 'de.ipk-gatersleben', name: 'eDAL-MetaDataAPI', version:'2.5.2'
    compile group: 'commons-cli', name: 'commons-cli', version:'1.2'
    compile group: 'com.healthmarketscience.rmiio', name: 'rmiio', version:'2.1.0'
    testCompile group: 'junit', name: 'junit', version:'4.10'
}
*/
/*
test {
    useJUnit()
    maxParallelForks = Runtime.runtime.availableProcessors()
    minHeapSize = "128m"
    maxHeapSize = "512m"

    systemProperties = ["java.security.policy": file("./src/main/resources/de/ipk_gatersleben/bit/bi/edal/primary_data/policy.txt").absolutePath ]

    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}
*/

/*
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
shadowJar {
   classifier = 'jar-with-dependencies'
}
artifacts {
    archives javadocJar, sourcesJar, shadowJar
}
signing {
    sign configurations.archives
}
*/
/*
uploadArchives {
  repositories {
    mavenDeployer {
    
      beforeDeployment { 
      	MavenDeployment deployment -> signing.signPom(deployment) 
      }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
        proxy(host: System.properties['https.proxyHost'], port: System.properties['https.proxyPort'] as Integer, type: 'http')
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
        proxy(host: System.properties['https.proxyHost'], port: System.properties['https.proxyPort'] as Integer, type: 'http')
      }

      pom.project {
        name = projectname
        packaging = 'jar'
        artifactId = projectname
        description = projectdescription
        url = projecturl

        scm {
          connection 'scm:git:https://bitbucket.org/ipk_bit_team/edal-api-server.git'
          developerConnection 'scm:git:https://bitbucket.org/ipk_bit_team/edal-api-server.git'
          url 'https://bitbucket.org/ipk_bit_team/edal-api-server.git'
        }

        licenses {
          license {
            name 'Creative Commons Attribution-NoDerivatives 4.0 International (CC BY-ND 4.0)'
            url 'http://creativecommons.org/licenses/by-nd/4.0/'
          }
        }

        developers {
          developer {
            name 'Daniel Arend'
            email 'arendd@ipk-gatersleben.de'
            organization = 'IPK Gatersleben'
            organizationUrl 'http://www.ipk.gatersleben.de'
          }
          developer {
            name 'Matthias Lange'
            email 'lange@ipk-gatersleben.de'
            organization = 'IPK Gatersleben'
            organizationUrl 'http://www.ipk.gatersleben.de'
          }
        }
      }
    }
  }
}
*/
/*
release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true

  	preCommitText = ''
  	preTagCommitMessage = '[gradle-release-plugin] - prepare release '
    tagCommitMessage = '[gradle-release-plugin] - creating tag: '
    newVersionCommitMessage = '[gradle-release-plugin] - prepare for next development iteration '
    
    tagTemplate = "${projectname}-"+'$version'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']
   
    scmAdapters = [
        net.researchgate.release.GitAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        signTag = false
    }
}

afterReleaseBuild.dependsOn uploadArchives
*/