plugins {
  id "net.researchgate.release" version "2.6.0"
}

apply plugin: 'net.researchgate.release'


license {
    header rootProject.file('eDAL-MetaDataAPI-Server/src/main/resources/license.txt')
    strictCheck false
 	ext.year = Calendar.getInstance().get(Calendar.YEAR)
	include "**/*.java"
}

uploadArchives {
	repositories {
		mavenDeployer {
	      	pom.project {
		        name = projectname
		        packaging = 'jar'
		        artifactId = projectname
		        description = projectdescription
		        url = projecturl
	
		        scm {
		          	connection 'scm:git:https://bitbucket.org/ipk_bit_team/edal-server.git'
		          	developerConnection 'scm:git:https://bitbucket.org/ipk_bit_team/edal-server.git'
		          	url 'https://bitbucket.org/ipk_bit_team/edal-server.git'
		        }
	
		        licenses {
		          	license {
		            	name 'Creative Commons Attribution-NoDerivatives 4.0 International (CC BY-ND 4.0)'
		            	url 'http://creativecommons.org/licenses/by-nd/4.0/'
		          	}
		        }
	
		        developers {
			          developer {
			            name 'Daniel Arend'
			            email 'arendd@ipk-gatersleben.de'
			            organization = 'IPK Gatersleben'
			            organizationUrl 'http://www.ipk.gatersleben.de'
			          }
			          developer {
			            name 'Matthias Lange'
			            email 'lange@ipk-gatersleben.de'
			            organization = 'IPK Gatersleben'
			            organizationUrl 'http://www.ipk.gatersleben.de'
			          }
		        }
	      	}
    	}
  	}
}

release {
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = true
    failOnUnversionedFiles = true
    failOnUpdateNeeded = true
    revertOnFail = true

  	preCommitText = ''
  	preTagCommitMessage = '[gradle-release-plugin] - prepare release '
    tagCommitMessage = '[gradle-release-plugin] - creating tag: '
    newVersionCommitMessage = '[gradle-release-plugin] - prepare for next development iteration '
    
    tagTemplate = "${projectname}-"+'$version'
    versionPropertyFile = 'gradle.properties'
    versionProperties = []
    buildTasks = ['build']
   
    scmAdapters = [
        net.researchgate.release.GitAdapter
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        signTag = false
    }
}

afterReleaseBuild.dependsOn uploadArchives